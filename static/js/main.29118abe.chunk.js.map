{"version":3,"sources":["components/accountnavigation.js","components/userAccount.js","components/signup.js","components/login.js","components/mainnavigation.js","components/gardenactions.js","components/newgarden.js","components/searchresults.js","components/newplot.js","components/plotentry.js","components/plots.js","components/watering.js","components/fertilizer.js","components/gardenentry.js","components/gardens.js","components/startgardenprompt.js","components/wateringentry.js","components/wateringactivities.js","components/fertilizerentry.js","components/fertilizeractivities.js","components/plotactivities.js","components/profile.js","components/contact.js","App.js","index.js"],"names":["AccountNavigation","props","className","type","data-toggle","data-target","aria-controls","id","to","baseurl","userAccount","login","email","password","url","axios","post","signup","username","updateUser","name","image","put","getUser","userid","sessionStorage","getItem","get","Signup","state","confirmPassword","validationError","newState","this","getCopyOfState","setState","event","preventDefault","errors","validateInputs","length","window","location","push","value","onChange","e","setUsername","target","setEmail","setPassword","setConfirmPassword","onClick","handleSubmit","React","Component","Login","errorMessage","response","setItem","data","MainNavigation","href","aria-expanded","aria-label","gardenActions","createNewGarden","gardenName","createNewPlot","plotInfo","gardenid","getGarden","getUserGardens","recordWatering","plotid","date","quantity","note","recordFertilization","searchForPlant","plantSearchTerm","addProfil","NewGarden","gardenAction","status","console","error","setGardenName","PlantSearchResults","plants","plantsearch","isSearchRequested","searchterm","garden","plots","selectedPlant","plantSelected","map","plant","index","key","handlePlantItemSelected","plantName","NewPlot","plotName","width","sizeunits","p","handlePlantSearchSelected","setPlotName","maxLength","size","setlength","setWidth","handleChange","placeholder","setPlantSearchName","handleSearchClicked","setQuantity","PlotEntry","plot","number","src","plantImageUrl","dimension","plotId","Plot","i","units","imageUrl","_id","scope","colSpan","Watering","Date","match","params","format","rows","setNote","Fertilizer","Name","setName","GardenEntry","plotsCount","gardens","StartGardenPrompt","WateringEntry","activity","notes","WateringActivities","activities","watering","FertilizationEntry","FertilizationActivities","fertilizer","Activities","selectedActivity","find","updateSelectedActivity","checked","handleActivityTypeSelected","Profile","placeholderimage","placeholderpassword","isPasswordDisabled","isNameDisabled","isEmailDisabled","user","reader","FileReader","addEventListener","result","readAsDataURL","alt","handleImageSelected","files","aria-describedby","disabled","handlePasswordEditClicked","handleNameEditClicked","handleEmailEditClicked","mailslurp","MailSlurp","apiKey","Contact","message","getInbox","inbox","options","subject","body","sendEmail","resetForm","alert","onSubmit","onNameChange","bind","onEmailChange","onMessageChange","App","exact","path","component","Gardens","Plots","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.29118abe.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction AccountNavigation(props){\r\n        return(\r\n            <header className=\"row\">\r\n            <div className=\"col-md-12 d-flex justify-content-end\">\r\n                <nav className=\"navbar navbar-expand-lg\">\r\n                    <button className=\"navbar-toggler navbar-dark\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\">\r\n                        <span className=\"navbar-toggler-icon navbar-dark\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarToggler\">\r\n                        <div className=\"navbar-nav\">\r\n                            <NavLink className=\"nav-item nav-link active text-light\" to=\"/\">Home</NavLink>\r\n                            <NavLink className=\"nav-item nav-link active text-light\" to=\"/contact\">Help</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n        )\r\n}\r\n\r\nexport default AccountNavigation;","import axios from 'axios';\r\nconst baseurl = 'https://garden-helper.herokuapp.com';\r\n\r\nconst userAccount = {\r\n    login: function login(email, password) {\r\n\r\n        let url = `${baseurl}/user/signin`;\r\n\r\n        return axios.post(url, {\r\n            email: email,\r\n            password: password\r\n        });\r\n    },\r\n\r\n    signup: function signUp(username, email, password) {\r\n\r\n        let url = `${baseurl}/user/signup`;\r\n\r\n        return axios.post(url, {\r\n            username: username,\r\n            email: email,\r\n            password: password\r\n        })\r\n    },\r\n\r\n    updateUser: function signUp(name, image, password,email) {\r\n\r\n        let url = `${baseurl}/user/userInfo/update`;\r\n\r\n        return axios.put(url, {\r\n            name: name,\r\n            image: image,\r\n            password: password,\r\n            email:email\r\n        });\r\n    },\r\n    getUser: () =>{\r\n        let userid = sessionStorage.getItem('userid');\r\n        let url = `${baseurl}/user/userInfo/${userid}`;\r\n        return axios.get(url);\r\n    }\r\n}\r\n\r\nexport default userAccount;","import React from 'react';\r\nimport AccountNavigation from './accountnavigation';\r\nimport userAccount from './userAccount';\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            validationError: ''\r\n        }\r\n    }\r\n\r\n    setUsername(username) {\r\n        let newState = this.getCopyOfState();\r\n        newState.username = username;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setEmail(email) {\r\n        let newState = this.getCopyOfState();\r\n        newState.email = email;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPassword(password) {\r\n        let newState = this.getCopyOfState();\r\n        newState.password = password;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            validationError: this.state.validationError\r\n        }\r\n    }\r\n\r\n    setConfirmPassword(password) {\r\n        let newState = this.getCopyOfState();\r\n        newState.confirmPassword = password;\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let errors = this.validateInputs();\r\n\r\n        if (errors.length > 0) {\r\n            let newState = this.getCopyOfState();\r\n            newState.validationError = errors[0];\r\n            this.setState(newState);\r\n        } else {\r\n            try {\r\n                await userAccount.signup(this.state.username, this.state.email, this.state.password);\r\n                window.location = '/login';\r\n            } catch (error) {\r\n                let newState = this.getCopyOfState();\r\n                newState.validationError = `Somthing went terribly wrong!. It's not your fault. It's us. We're working to resolve it now`;\r\n                this.setState(newState);\r\n            }\r\n        }\r\n    }\r\n\r\n    validateInputs() {\r\n        let errors = [];\r\n\r\n        if (this.state.confirmPassword !== this.state.password)\r\n            errors.push(\"Passwords do not match\");\r\n\r\n        //add other validations like email validation\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fliud h-100 hero-image hero-image2\">\r\n                <AccountNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-4 col-xs-0\"></div>\r\n                    <div className=\"col-md-4 col-xs-12 d-flex justify-content-center\">\r\n                        <div className=\"card h-75 w-100 overflow-auto d-flex useraccount\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-white\">Create a new account</h5>\r\n                                <form id=\"signup-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Name</label>\r\n                                        <input type=\"text\" id=\"fullname\" className=\"form-control\" value={this.state.name} onChange={(e) => this.setUsername(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Email</label>\r\n                                        <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.email} onChange={(e) => this.setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Password</label>\r\n                                        <input type=\"password\" id=\"password\" className=\"form-control\" value={this.state.password} onChange={(e) => this.setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Confirm Password</label>\r\n                                        <input type=\"password\" id=\"confirmpassword\" className=\"form-control\" value={this.state.confirmPassword} onChange={(e) => this.setConfirmPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-secondary mt-4 mx-auto w-100\" onClick={(event) => this.handleSubmit(event)}>Sign up</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.validationError}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-0\"></div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport AccountNavigation from './accountnavigation';\r\nimport userAccount from './userAccount';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    setEmail(email) {\r\n        let newState = this.getCopyOfState();\r\n        newState.email = email;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPassword(password) {\r\n        let newState = this.getCopyOfState();\r\n        newState.password = password;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            errorMessage: this.state.errorMessage\r\n        }\r\n    }\r\n\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            let response = await userAccount.login(this.state.email, this.state.password);\r\n            sessionStorage.setItem('userid', response.data.userid);\r\n            window.location = '/user/gardens';\r\n        } catch (error) {\r\n            let newState = this.getCopyOfState();\r\n            newState.errorMessage = `Somthing went terribly wrong!. It's not your fault. It's us. We're working to resolve it now`;\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fliud h-100 hero-image hero-image2\">\r\n                <AccountNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-4 col-xs-0\"></div>\r\n                    <div className=\"col-md-4 col-xs-12 d-flex justify-content-center\">\r\n                        <div className=\"card logincontainer w-100 overflow-auto d-flex useraccount\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-white\">Log In</h5>\r\n                                <form id=\"signup-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Email</label>\r\n                                        <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.email} onChange={(e) => this.setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Password</label>\r\n                                        <input type=\"password\" id=\"password\" className=\"form-control\" value={this.state.password} onChange={(e) => this.setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-secondary mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>Log in</button>\r\n                                </form>\r\n                                <div className=\"error my-4 mx-auto\">\r\n                                    <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-0\"></div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nfunction MainNavigation(props) {\r\n    return (\r\n        <header className=\"row\">\r\n            <div className=\"col-md-12 p-0\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark mainnav shadow-sm\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Garden Book | </a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/\">Home<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/garden/plots\">Gardens<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/garden/new\">New Garden<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/garden/plot/add\">Add Plot<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/garden/plots\">My Plots<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"nav-item active align-self-end\">\r\n                                <a className=\"nav-link text-white\"  href=\"/api/profile/add\">Profile<span className=\"sr-only\">(current)</span></a>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default MainNavigation;","import axios from 'axios';\r\nconst baseurl = 'https://garden-helper.herokuapp.com';\r\n\r\nconst gardenActions = {\r\n    createNewGarden: (gardenName) => {\r\n\r\n        let url = `${baseurl}/api/garden/add`;\r\n\r\n        return axios.post(url, {\r\n            name: gardenName,\r\n            userid: sessionStorage.getItem('userid')\r\n        });\r\n    },\r\n\r\n    createNewPlot: (plotInfo) => {\r\n        let url = `${baseurl}/api/plot/add`;\r\n        plotInfo.userid = sessionStorage.getItem('userid');\r\n        plotInfo.gardenid = sessionStorage.getItem('gardenid');\r\n\r\n        return axios.post(url, plotInfo);\r\n    },\r\n\r\n    getGarden: () => {\r\n        let gardenid = sessionStorage.getItem('gardenid');\r\n        if (gardenid) {\r\n            let url = `${baseurl}/api/garden/${gardenid}`;\r\n            return axios.get(url);\r\n        }\r\n    },\r\n\r\n    getUserGardens: () => {\r\n        let userid = sessionStorage.getItem('userid');\r\n        if (userid) {\r\n            let url = `${baseurl}/api/user/gardens/${userid}`;\r\n            return axios.get(url);\r\n        }\r\n    },\r\n\r\n    recordWatering: (plotid, date, quantity, note) => {\r\n        let url = `${baseurl}/api/watering/add`;\r\n\r\n        return axios.post(url, {\r\n            date: date,\r\n            quantity: quantity,\r\n            note: note,\r\n            plotid: plotid,\r\n            gardenid: sessionStorage.getItem('gardenid')\r\n        });\r\n    },\r\n\r\n    recordFertilization: (plotid, date, name, note) => {\r\n        let url = `${baseurl}/api/fertilizer/add`;\r\n\r\n        return axios.post(url, {\r\n            date: date,\r\n            name: name,\r\n            note: note,\r\n            plotid: plotid,\r\n            gardenid: sessionStorage.getItem('gardenid')\r\n        });\r\n    },\r\n\r\n    searchForPlant: (plantSearchTerm) => {\r\n        let url = `${baseurl}/api/garden/plant/search/${plantSearchTerm}`;\r\n        return axios.get(url);\r\n    },\r\n\r\n    addProfil: (name,location,image) => {\r\n        let url = `${baseurl}/api/profile/add`;\r\n\r\n        return axios.post(url,{\r\n            name:name,\r\n            location:location,\r\n            image:image,\r\n            gardenid: sessionStorage.getItem('gardenid')\r\n        })\r\n    }\r\n}\r\n\r\nexport default gardenActions;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\n\r\nclass NewGarden extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gardenName: '',\r\n            errorMessage:''\r\n        }\r\n    }\r\n\r\n    setGardenName(gardenName) {\r\n        let newState = this.getCopyOfState();\r\n        newState.gardenName = gardenName;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            gardenName: this.state.gardenName\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            let response = await gardenAction.createNewGarden(this.state.gardenName);\r\n            switch (response.status) {\r\n                case 200:\r\n                    sessionStorage.setItem('gardenid', response.data.gardenid);\r\n                    window.location = '/garden/plot/add';\r\n                    break;\r\n                case 500:\r\n                    let newState = this.getCopyOfState();\r\n                    newState.errorMessage = `Unable to save garden`;\r\n                    break;\r\n                default:\r\n                    console.error(\"Unexpected response status came in. Check out what's going on.\");\r\n            }\r\n        } catch (error) {\r\n            let newState = this.getCopyOfState();\r\n            newState.errorMessage = `Somthing went terribly wrong!. It's not your fault. It's us. We're working to resolve it now`;\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fliud h-100 mainpagesbackground overflow-auto\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-50 mx-auto mt-5\">\r\n                                <h3 className=\"card-title\">Start a new Garden</h3>\r\n                                <form id=\"signup-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"\">Garden name</label>\r\n                                        <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.gardenName} onChange={(e) => this.setGardenName(e.target.value)} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>Create</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewGarden;","import React from 'react';\r\nimport gardenAction from './gardenactions';\r\n\r\nclass PlantSearchResults extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plants: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.plantsearch.isSearchRequested) {\r\n            let response = await gardenAction.searchForPlant(this.props.plantsearch.searchterm);\r\n            if (response) {\r\n                let newState = this.getCopyOfState();\r\n                newState.plants = response.data;\r\n                this.setState(newState);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            garden: this.state.garden,\r\n            plots: this.state.plots\r\n        }\r\n    }\r\n\r\n    isEmpty() {\r\n        return !this.props.plantsearch.isSearchRequested;\r\n    }\r\n\r\n    handlePlantItemSelected(event, selectedPlant){\r\n        event.preventDefault();\r\n        this.props.plantsearch.plantSelected(selectedPlant);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"border border-secondary rounded-bottom searchresult\">\r\n                {this.state.plants.map((plant, index) => {\r\n                    return (<a key={index} href='/' className=\"dropdown-item\" onClick={(e) => this.handlePlantItemSelected(e, plant)}>{plant.plantName}</a>)\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PlantSearchResults;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport PlantSearchResults from './searchresults';\r\n\r\nclass NewPlot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            garden: '',\r\n            plotName: '',\r\n            length: '',\r\n            width: '',\r\n            sizeunits: '',\r\n            quantity: '',\r\n            plant: '',\r\n            errorMessage: '',\r\n            plantsearch: {\r\n                isSearchRequested: false,\r\n                searchterm: '',\r\n                plantSelected: (p) => this.handlePlantSearchSelected(p)\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePlantSearchSelected(plant) {\r\n        let newState = this.getCopyOfState();\r\n        newState.plantsearch.isSearchRequested = false;\r\n        newState.plantsearch.searchterm = plant.plantName;\r\n        newState.plant = plant;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPlotName(plotName) {\r\n        let newState = this.getCopyOfState();\r\n        newState.plotName = plotName;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setlength(length) {\r\n        let newState = this.getCopyOfState();\r\n        newState.length = length;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setWidth(width) {\r\n        let newState = this.getCopyOfState();\r\n        newState.width = width;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPlantSearchName(plantName) {\r\n        let newState = this.getCopyOfState();\r\n        newState.plantsearch.searchterm = plantName;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setQuantity(quantity) {\r\n        let newState = this.getCopyOfState();\r\n        newState.quantity = quantity;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleChange(sizeunits) {\r\n        let newState = this.getCopyOfState();\r\n        newState.sizeunits = sizeunits;\r\n        this.setState(newState);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await gardenAction.getGarden();\r\n        if (response) {\r\n            let garden = response.data;\r\n            let newState = this.getCopyOfState();\r\n            newState.garden = garden.name;\r\n\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            garden: this.state.garden,\r\n            plotName: this.state.plotName,\r\n            plantName: this.state.plantName,\r\n            quantity: this.state.quantity,\r\n            length: this.state.length,\r\n            width: this.state.width,\r\n            sizeunits: this.state.sizeunits,\r\n            plantsearch: this.state.plantsearch,\r\n            plant: this.state.plant\r\n        }\r\n    }\r\n\r\n    handleSearchClicked(event) {\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n        newState.plantsearch.isSearchRequested = true;\r\n        this.setState(newState);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            this.state.plant.quantity = this.state.quantity;\r\n\r\n            let plotInfo = {\r\n                plotName: this.state.plotName,\r\n                plant: this.state.plant,\r\n                length: this.state.length,\r\n                width: this.state.width,\r\n                sizeunits: this.state.sizeunits\r\n            }\r\n            let response = await gardenAction.createNewPlot(plotInfo);\r\n            switch (response.status) {\r\n                case 200:\r\n                    window.location = '/garden/plots';\r\n                    break;\r\n                case 500:\r\n                    let newState = this.getCopyOfState();\r\n                    newState.errorMessage = `Unable to save plot`;\r\n                    break;\r\n                default:\r\n                    console.error(\"Unexpected response status came in. Check out what's going on.\");\r\n            }\r\n        } catch (error) {\r\n            let newState = this.getCopyOfState();\r\n            newState.errorMessage = `Somthing went terribly wrong!. It's not your fault. It's us. We're working to resolve it now`;\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-50 mx-auto mt-5\">\r\n                                <h3 className=\"card-title\">Add a new plot to {this.state.garden} Garden</h3>\r\n                                <form id=\"signup-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"\">What shall we call this plot?</label>\r\n                                        <input type=\"text\" id=\"plotname\" className=\"form-control\" value={this.state.plotName} onChange={(e) => this.setPlotName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group justify-content-center\">\r\n                                        <label className=\"\">How large is your plot? </label>\r\n                                        <div className=\"form-check-inline mx-2\">\r\n                                            <input type=\"text\" id=\"plotLength\" name=\"plotLength\" maxLength=\"5\" size=\"3\" value={this.state.length} onChange={(e) => this.setlength(e.target.value)} />\r\n\r\n                                            <span className=\"mx-2\">X</span>\r\n\r\n                                            <input type=\"text\" id=\"plotWidth\" name=\"plotWidth\" maxLength=\"5\" size=\"3\" value={this.state.width} onChange={(e) => this.setWidth(e.target.value)} />\r\n\r\n                                            <div className=\"input-group mx-2\">\r\n                                                <select className=\"custom-select\" id=\"areaUnits\" onChange={(e) => this.handleChange(e.target.value)}>\r\n                                                    <option value=\"DEFAULT\">Units</option>\r\n                                                    <option value=\"ft\">Feet</option>\r\n                                                    <option value=\"yd\">Yards</option>\r\n                                                    <option value=\"m\">Metres</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"\">What do you want to plant?</label>\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" id=\"inlineFormInputGroup\" placeholder=\"Find plant\" value={this.state.plantsearch.searchterm} onChange={(e) => this.setPlantSearchName(e.target.value)} />\r\n                                            <div className=\"input-group-append\">\r\n                                                <button className=\"btn btn-secondary input-group-button\" onClick={(e) => this.handleSearchClicked(e)}>search</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.plantsearch.isSearchRequested ? <PlantSearchResults plantsearch={this.state.plantsearch} /> : <span />}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"\">How many do you want to plant?</label>\r\n                                        <input type=\"text\" id=\"plotname\" className=\"form-control\" value={this.state.quantity} onChange={(e) => this.setQuantity(e.target.value)} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>Create</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPlot;","import React from 'react';\r\n\r\nfunction PlotEntry(props) {\r\n    return (\r\n        <tr>\r\n            <td className=\"align-middle\">{props.plot.number}</td>\r\n            <td className=\"align-middle\"><img className=\"img-thumbnail plantimage\" src={props.plot.plantImageUrl} /></td>\r\n            <td className=\"align-middle\">{props.plot.plant}</td>\r\n            <td className=\"align-middle\">{props.plot.plotName}</td>\r\n            <td className=\"align-middle\">{props.plot.dimension}</td>\r\n            <td className=\"align-middle\">\r\n                <div className='d-flex flex-row justify-content-center'>\r\n                    <button className='btn btn-primary mr-1 my-1 btn-sm' onClick={() => getWateringInfo(props.plot.plotid)}>Water</button>\r\n                    <button className='btn btn-dark mr-1 my-1 btn-sm' onClick={() => getFertilizerInfo(props.plot.plotid)}>Fertilize</button>\r\n                    <button className='btn btn-info mr-1 my-1 btn-sm' onClick={() => getActivities(props.plot.plotid)}>Activities</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nfunction getWateringInfo(plotId) {\r\n    window.location = `/garden/plot/watering/${plotId}`;\r\n}\r\n\r\nfunction getFertilizerInfo(plotId) {\r\n    window.location = `/garden/plot/fertilizer/${plotId}`;\r\n}\r\n\r\nfunction getActivities(plotId) {\r\n    window.location = `/garden/plot/activities/${plotId}`;\r\n}\r\n\r\nexport default PlotEntry;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport PlotEntry from './plotentry';\r\n\r\nclass Plot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            garden: '',\r\n            plots: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await gardenAction.getGarden();\r\n        if (response) {\r\n            let garden = response.data;\r\n\r\n            let plots = garden.plots;\r\n\r\n            let newState = this.getCopyOfState();\r\n            newState.garden = garden.name;\r\n            newState.plots = [];\r\n\r\n            for (let i = 0; i < plots.length; i++) {\r\n                let plot = plots[i];\r\n                newState.plots.push({\r\n                    number: i + 1,\r\n                    plotName: plot.name,\r\n                    dimension: `${plot.length} X ${plot.width} ${plot.units}`,\r\n                    plant: plot.plant.plantName,\r\n                    plantImageUrl: plot.plant.imageUrl,\r\n                    plotid: plot._id\r\n                });\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            garden: this.state.garden,\r\n            plots: this.state.plots\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-1 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body mx-auto mt-1 plotstablecontainer\">\r\n                                <h3 className=\"card-title\">Plots in {this.state.garden} Garden</h3>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\" colSpan='2'>Plant</th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Dimension</th>\r\n                                            <th scope=\"col\" className=\"px-auto\">What do you want to do?</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.plots.map((plot, index) => {\r\n                                            return <PlotEntry key={index} index={index} plot={plot} />\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Plot;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport Moment from 'react-moment';\r\n\r\nclass Watering extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            quantity: '',\r\n            note: ''\r\n        }\r\n        if (props.match.params.plotid)\r\n            this.state.plotid = props.match.params.plotid\r\n    }\r\n\r\n    setQuantity(quantity) {\r\n        let newState = this.getCopyOfState();\r\n        newState.quantity = quantity;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setNote(note) {\r\n        let newState = this.getCopyOfState();\r\n        newState.note = note;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            date: this.state.date,\r\n            quantity: this.state.quantity,\r\n            note: this.state.note,\r\n            plotid: this.state.plotid\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await gardenAction.recordWatering(this.state.plotid, this.state.date, this.state.quantity, this.state.note);\r\n        window.location = '/garden/plots';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-75 mx-auto mt-5\">\r\n                                <h3 className=\"card-title\">Watering Information</h3>\r\n                                <form id=\"form\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Recording watering for</label> <Moment date={this.state.date} format=\"MM/DD/YYYY hh:mm A\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Quantity</label>\r\n                                            <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.quantity} onChange={(e) => this.setQuantity(e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Notes</label>\r\n                                            <textarea className=\"form-control\" id=\"messages\" rows=\"3\" value={this.state.note} onChange={(e) => this.setNote(e.target.value)}></textarea>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>save</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                {/* <span className=\"text-danger\">{this.state.errorMessage}</span> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Watering;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport Moment from 'react-moment';\r\n\r\nclass Fertilizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            name: '',\r\n            note: ''\r\n        }\r\n        if (props.match.params.plotid)\r\n            this.state.plotid = props.match.params.plotid\r\n    }\r\n\r\n    setName(name) {\r\n        let newState = this.getCopyOfState();\r\n        newState.name = name;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setNote(note) {\r\n        let newState = this.getCopyOfState();\r\n        newState.note = note;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            date: this.state.date,\r\n            name: this.state.name,\r\n            note: this.state.note,\r\n            plotid: this.state.plotid\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await gardenAction.recordFertilization(this.state.plotid, this.state.date, this.state.name, this.state.note);\r\n        window.location = '/garden/plots';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-75 mx-auto mt-5\">\r\n                                <h3 className=\"card-title\">Fertilizer Information</h3>\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Recording fertilization for</label> <Moment date={this.state.date} format=\"MM/DD/YYYY hh:mm A\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input type=\"text\" id=\"name\" className=\"form-control\" value={this.state.Name} onChange={(e) => this.setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Notes</label>\r\n                                        <textarea className=\"form-control\" id=\"messages\" rows=\"3\" value={this.state.note} onChange={(e) => this.setNote(e.target.value)}></textarea>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>save</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                {/* <span className=\"text-danger\">{this.state.errorMessage}</span> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fertilizer;","import React from 'react';\r\n\r\nfunction GardenEntry(props) {\r\n    return (\r\n        <tr>\r\n            <td>{props.garden.number}</td>\r\n            <td>{props.garden.gardenName}</td>\r\n            <td>{props.garden.plotsCount}</td>\r\n            <td>\r\n                <div className='d-flex flex-row justify-content-around'>\r\n                    <button className='btn btn-dark mx-1 my-1 py-0 px-1' onClick={() => tillGarden(props.garden.gardenid)}>Cultivate</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nfunction tillGarden(gardenid) {\r\n    sessionStorage.setItem('gardenid', gardenid);\r\n    window.location = '/garden/plots';\r\n}\r\n\r\nexport default GardenEntry;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport GardenEntry from './gardenentry';\r\n\r\nclass Plot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gardens: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await gardenAction.getUserGardens();\r\n        if (response) {\r\n            let gardens = response.data;\r\n            if (gardens.length > 0) {\r\n                let newState = this.getCopyOfState();\r\n                newState.gardens = [];\r\n\r\n                for (let i = 0; i < gardens.length; i++) {\r\n                    let garden = gardens[i];\r\n                    newState.gardens.push({\r\n                        number: i + 1,\r\n                        gardenName: garden.name,\r\n                        plotsCount: garden.plots.length,\r\n                        gardenid: garden._id\r\n                    });\r\n                }\r\n                this.setState(newState);\r\n            } else {\r\n                window.location='/garden/prompt'\r\n            }\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            gardens: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body mx-auto mt-5 plotstablecontainer\">\r\n                                <h3 className=\"card-title\">Your Gardens</h3>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\" colSpan='2'>Plots</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.gardens.map((garden, index) => {\r\n                                            return <GardenEntry key={index} index={index} garden={garden} />\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Plot;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\n\r\nfunction StartGardenPrompt(props) {\r\n    return (\r\n        <div className=\"container-fluid h-100 mainpagesbackground\">\r\n            <MainNavigation />\r\n            <div className=\"row h-50 mt-5\">\r\n                <div className=\"col-md-12 d-flex justify-content-center\">\r\n                    <div className=\"card w-50 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                        <div className=\"card-body mx-auto mt-5 d-flex flex-column plotstablecontainer\">\r\n                            <h3 className=\"card-title\">You have no Gardens. Want to start one?</h3>\r\n                            <button className='btn btn-dark mt-4 mx-auto garden-prompt-button' onClick={() => window.location = '/garden/new'}>Start</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartGardenPrompt;","import React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nfunction WateringEntry(props) {\r\n    return (\r\n        <tr>\r\n            <td>{props.activity.number}</td>\r\n            <td><Moment date={props.activity.date} format=\"MM/DD/YYYY hh:mm A\" /></td>\r\n            <td>{props.activity.quantity}</td>\r\n            <td>{props.activity.notes}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default WateringEntry;","import React from 'react';\r\nimport WateringEntry from './wateringentry';\r\n\r\nfunction WateringActivities(props) {\r\n    let activities = [];\r\n    if (props.plot) {\r\n        for (let i = 0; i < props.plot.watering.length; i++) {\r\n            let watering = props.plot.watering[i];\r\n            activities.push({\r\n                number: i + 1,\r\n                date: watering.date,\r\n                quantity: watering.quantity,\r\n                notes: watering.note,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex flex-column'>\r\n            <h5>Your waterings in {props.plot ? props.plot.name : ''}</h5>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">Notes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {activities.map((activity, index) => {\r\n                        return <WateringEntry key={index} index={index} activity={activity} />\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WateringActivities;","import React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nfunction FertilizationEntry(props) {\r\n    return (\r\n        <tr>\r\n            <td><Moment date={props.activity.date} format=\"MM/DD/YYYY hh:mm A\" /></td>\r\n            <td>{props.activity.name}</td>\r\n            <td>{props.activity.notes}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default FertilizationEntry;","import React from 'react';\r\nimport FertilizationEntry from './fertilizerentry';\r\n\r\nfunction FertilizationActivities(props) {\r\n    let activities = [];\r\n    if (props.plot) {\r\n        for (let i = 0; i < props.plot.fertilizer.length; i++) {\r\n            let watering = props.plot.fertilizer[i];\r\n            activities.push({\r\n                number: i + 1,\r\n                date: watering.date,\r\n                quantity: watering.quantity,\r\n                notes: watering.note,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex flex-column'>\r\n             <h5>Your Fertilizations in {props.plot ? props.plot.name : ''}</h5>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Notes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {activities.map((activity, index) => {\r\n                        return <FertilizationEntry key={index} index={index} activity={activity} />\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FertilizationActivities;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport WateringActivities from './wateringactivities';\r\nimport FertilizationActivities from './fertilizeractivities';\r\n\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plot: null,\r\n            selectedActivity: 'Watering'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await gardenAction.getGarden();\r\n        if (response) {\r\n            let garden = response.data;\r\n\r\n            let plot = garden.plots.find(plot => plot._id === this.props.match.params.plotid);\r\n            if (plot) {\r\n                let newState = this.getCopyOfState();\r\n                newState.plot = plot;\r\n                this.setState(newState);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            garden: this.state.garden,\r\n            plots: this.state.plots\r\n        }\r\n    }\r\n\r\n    updateSelectedActivity(e) {\r\n        let newState = this.getCopyOfState();\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleActivityTypeSelected(selectedActivity) {\r\n        let newState = this.getCopyOfState();\r\n        newState.selectedActivity = selectedActivity;\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-1 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body mx-auto d-flex flex-column plotstablecontainer\">\r\n                                <h3 className=\"card-title\">Your activities in {this.state.plot? this.state.plot.name : ''} Plot</h3>\r\n                                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\" onClick={(e) => this.updateSelectedActivity(e)}>\r\n                                    <label className=\"btn btn-primary active\">\r\n                                        <input type=\"radio\" name=\"options\" value=\"Watering\" checked={this.state.selectedActivity === 'Watering'} onChange={(e) => this.handleActivityTypeSelected(e.target.value)} /> Waterings\r\n                                 </label>\r\n                                    <label className=\"btn btn-dark\">\r\n                                        <input type=\"radio\" name=\"options\" value=\"Fertilizations\" checked={this.state.selectedActivity === 'Fertilizations'} onChange={(e) => this.handleActivityTypeSelected(e.target.value)} /> Fertilizations\r\n                                 </label>\r\n                                </div>\r\n                                <div className=\"mt-5\">\r\n                                    {(this.state.selectedActivity === 'Watering' ?\r\n                                        <WateringActivities plot={this.state.plot} /> : <FertilizationActivities plot={this.state.plot} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport userAccount from './userAccount';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            placeholderimage: 'https://via.placeholder.com/100',\r\n            password: null,\r\n            placeholderpassword: '*****************',\r\n            isPasswordDisabled: true,\r\n            isNameDisabled: true,\r\n            isEmailDisabled: true,\r\n            name: \"\",\r\n            email:\"\"\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let response = await userAccount.getUser();\r\n        if (response) {\r\n            let user = response.data;\r\n            if (user) {\r\n                let newState = this.getCopyOfState();\r\n                if (user.image)\r\n                    newState.image = user.image;\r\n                newState.name = user.name;\r\n                this.setState(newState);\r\n            }\r\n        }\r\n    }\r\n\r\n    setImage(image) {\r\n        let newState = this.getCopyOfState();\r\n        newState.image = image;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPassword(password) {\r\n        let newState = this.getCopyOfState();\r\n        newState.password = password;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setName(name) {\r\n        let newState = this.getCopyOfState();\r\n        newState.name = name;\r\n        this.setState(newState);\r\n    }\r\n    \r\n    setEmail(email) {\r\n        let newState = this.getCopyOfState();\r\n        newState.email = email;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            image: this.state.image,\r\n            placeholderimage : this.state.placeholderimage,\r\n            name: this.state.name,\r\n             email: this.state.email,\r\n            password: this.state.password,\r\n            isPasswordDisabled: this.state.isPasswordDisabled,\r\n            isNameDisabled: this.state.isNameDisabled,\r\n            placeholderpassword : this.state.placeholderpassword\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await userAccount.updateUser(this.state.name, this.state.image,this.state.password);\r\n        let newState = this.getCopyOfState();\r\n        newState.isPasswordDisabled = true;\r\n        newState.placeholderpassword = '*************************';\r\n        newState.password = null;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handlePasswordEditClicked(event) {\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n        newState.isPasswordDisabled = false;\r\n        newState.placeholderpassword = null;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleNameEditClicked(event) {\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n        newState.isNameDisabled = false;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleEmailEditClicked(event){\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n        newState.isEmailDisabled = false;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleImageSelected(image) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", () => {\r\n            let newState = this.getCopyOfState();\r\n            newState.image = reader.result;\r\n            this.setState(newState);\r\n        }, false);\r\n\r\n        if (image) {\r\n            reader.readAsDataURL(image);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-75 mx-auto mt-5\">\r\n                                <div className=\"d-flex\">\r\n                                    <img src={this.state.image || this.state.placeholderimage} alt=\"profile photo\" className=\"img-thumbnail mx-3 rounded-circle profileimage\" />\r\n                                    <div className=\"w-100\">\r\n                                        <h3 className=\"card-title\">Your Profile</h3>\r\n                                        <form>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"custom-file\">\r\n                                                    <input type=\"file\" className=\"custom-file-input\" onChange={(e) => this.handleImageSelected(e.target.files[0])} id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" />\r\n                                                    <label className=\"custom-file-label\" >upload picture</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"input-group\">\r\n                                                <input type=\"password\" className=\"form-control\" disabled={this.state.isPasswordDisabled} id=\"inlineFormInputGroup\" value={this.state.password || this.state.placeholderpassword } onChange={(e) => this.setPassword(e.target.value)} />\r\n                                                <div className=\"input-group-append\">\r\n                                                    <button className=\"btn btn-secondary input-group-button\" onClick={(e) => this.handlePasswordEditClicked(e)}>edit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-dark\">Name</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" disabled={this.state.isNameDisabled} id=\"inlineFormInputGroup\" value={this.state.name} onChange={(e) => this.setName(e.target.value)} />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-secondary input-group-button\" onClick={(e) => this.handleNameEditClicked(e)}>edit</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> \r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-dark\">email</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" disabled={this.state.isEmailDisabled} id=\"inlineFormInputGroup\" value={this.state.email} onChange={(e) => this.setEmail(e.target.value)} />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-secondary input-group-button\" onClick={(e) => this.handleEmailEditClicked(e)}>edit</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(event) => this.handleSubmit(event)}>save</button>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { MailSlurp } from \"mailslurp-client\";\r\nconst mailslurp = new MailSlurp({ apiKey: \"af09981b8affd4ed72c06191454258b498d6f3196de5bdf9fc25f57e5acd5cb3\" });\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n\r\n    onNameChange(event) {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    onEmailChange(event) {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n\r\n    onMessageChange(event) {\r\n        this.setState({ message: event.target.value })\r\n    }\r\n\r\n    resetForm() {\r\n\r\n        this.setState({ name: '', email: '', message: '' })\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let inbox = await mailslurp.getInbox('6ecd2217-2e07-4a27-8dd7-92ef3af2a991');\r\n        const options = {\r\n            to: ['melanieduah@yahoo.com'],\r\n            subject: 'Hey i need you help',\r\n            body: `Message from: ${this.state.name}.\r\n                      \r\n                  ${this.state.message}\r\n\r\n                My email is: ${this.state.email}`\r\n        }\r\n        await mailslurp.sendEmail(inbox.id, options);\r\n        this.resetForm();\r\n        alert('message received');\r\n        window.location = '/';\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 mt-5 d-flex justify-content-center\">\r\n                        <div className=\"card w-50 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-50 mx-auto mt-5\">\r\n                                <h5 className=\"card-title\">Any Problem Contact Us</h5>\r\n                                <form id=\"contact-form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Name</label>\r\n                                            <input type=\"text\" id=\"fullname\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email</label>\r\n                                            <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Messages</label>\r\n                                            <textarea className=\"form-control\" id=\"messages\" rows=\"3\" value={this.state.message} onChange={this.onMessageChange.bind(this)}></textarea>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './index.css';\r\nimport Signup from './components/signup';\r\nimport Login from './components/login';\r\nimport NewGarden from './components/newgarden';\r\nimport NewPlot from './components/newplot';\r\nimport Plots from './components/plots';\r\nimport Watering from './components/watering';\r\nimport Fertilizer from './components/fertilizer';\r\nimport Gardens from './components/gardens';\r\nimport StartGardenPrompt from './components/startgardenprompt';\r\nimport Activities from './components/plotactivities';\r\nimport Profile from './components/profile';\r\nimport Contact from './components/contact';\r\n\r\n\r\nexport default function App() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={Signup} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/user/gardens' component={Gardens} />\r\n            <Route exact path='/garden/new' component={NewGarden} />\r\n            <Route exact path='/garden/prompt' component={StartGardenPrompt} />\r\n            <Route exact path='/garden/plot/add' component={NewPlot} />\r\n            <Route exact path='/garden/plots' component={Plots} />\r\n            <Route exact path='/garden/plot/watering/:plotid' component={Watering} />\r\n            <Route exact path='/garden/plot/fertilizer/:plotid' component={Fertilizer} />\r\n            <Route exact path='/garden/plot/activities/:plotid' component={Activities} />\r\n            <Route exact path='/api/profile/add' component={Profile} />\r\n            <Route exact path='/contact' component={Contact} />\r\n        </Switch>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/Project-3-Frontend\">\r\n        <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}