{"version":3,"sources":["components/accountnavigation.js","components/userAccount.js","components/signup.js","components/login.js","components/mainnavigation.js","components/gardenactions.js","components/newgarden.js","components/searchresults.js","components/newplot.js","components/plotentry.js","components/plots.js","components/watering.js","components/fertilizer.js","components/gardenentry.js","components/gardens.js","components/startgardenprompt.js","components/wateringentry.js","components/wateringactivities.js","components/fertilizerentry.js","components/fertilizeractivities.js","components/plotactivities.js","components/profile.js","components/contact.js","App.js","index.js"],"names":["AccountNavigation","props","className","type","data-toggle","data-target","aria-controls","id","to","baseurl","userAccount","login","email","password","url","axios","post","signup","username","updateUser","name","image","put","getUser","userid","sessionStorage","getItem","get","Signup","state","confirmPassword","validationError","redirect","newState","this","getCopyOfState","setState","event","preventDefault","errors","validateInputs","length","push","value","onChange","e","setUsername","target","setEmail","setPassword","setConfirmPassword","onClick","handleSubmit","React","Component","Login","errorMessage","response","setItem","data","MainNavigation","href","aria-expanded","aria-label","gardenActions","createNewGarden","gardenName","createNewPlot","plotInfo","gardenid","getGarden","getUserGardens","recordWatering","plotid","date","quantity","note","recordFertilization","searchForPlant","plantSearchTerm","addProfil","location","NewGarden","gardenAction","status","console","error","setGardenName","PlantSearchResults","plants","plantsearch","isSearchRequested","searchterm","garden","plots","selectedPlant","plantSelected","map","plant","index","key","handlePlantItemSelected","plantName","NewPlot","plotName","width","sizeunits","p","handlePlantSearchSelected","setPlotName","maxLength","size","setlength","setWidth","handleChange","placeholder","setPlantSearchName","handleSearchClicked","setQuantity","PlotEntry","path","redirectpath","plot","number","src","plantImageUrl","dimension","redirectTo","plotId","Plot","i","units","imageUrl","_id","scope","colSpan","Watering","Date","match","params","format","rows","setNote","Fertilizer","Name","setName","GardenEntry","plotsCount","tillGarden","gardens","StartGardenPrompt","WateringEntry","activity","notes","WateringActivities","activities","watering","FertilizationEntry","FertilizationActivities","fertilizer","Activities","selectedActivity","find","updateSelectedActivity","checked","handleActivityTypeSelected","Profile","placeholderimage","placeholderpassword","isPasswordDisabled","isNameDisabled","isEmailDisabled","user","reader","FileReader","addEventListener","result","readAsDataURL","alt","handleImageSelected","files","aria-describedby","disabled","handlePasswordEditClicked","handleNameEditClicked","handleEmailEditClicked","mailslurp","MailSlurp","apiKey","Contact","message","getInbox","inbox","options","subject","body","sendEmail","alert","resetForm","onSubmit","onNameChange","bind","onEmailChange","onMessageChange","App","exact","component","Gardens","Plots","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.20ecea53.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction AccountNavigation(props){\r\n        return(\r\n            <header className=\"row\">\r\n            <div className=\"col-md-12 d-flex justify-content-end\">\r\n                <nav className=\"navbar navbar-expand-lg\">\r\n                    <button className=\"navbar-toggler navbar-dark\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\">\r\n                        <span className=\"navbar-toggler-icon navbar-dark\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarToggler\">\r\n                        <div className=\"navbar-nav\">\r\n                            <NavLink className=\"nav-item nav-link active text-light\" to=\"/\">Home</NavLink>\r\n                            <NavLink className=\"nav-item nav-link active text-light\" to=\"/contact\">Help</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n        )\r\n}\r\n\r\nexport default AccountNavigation;","import axios from 'axios';\r\nconst baseurl = 'https://garden-helper.herokuapp.com';\r\n\r\nconst userAccount = {\r\n    login: function login(email, password) {\r\n\r\n        let url = `${baseurl}/user/signin`;\r\n\r\n        return axios.post(url, {\r\n            email: email,\r\n            password: password\r\n        });\r\n    },\r\n\r\n    signup: function signUp(username, email, password) {\r\n\r\n        let url = `${baseurl}/user/signup`;\r\n\r\n        return axios.post(url, {\r\n            username: username,\r\n            email: email,\r\n            password: password\r\n        })\r\n    },\r\n\r\n    updateUser: function signUp(name, image, password,email) {\r\n\r\n        let url = `${baseurl}/user/userInfo/update`;\r\n\r\n        return axios.put(url, {\r\n            name: name,\r\n            image: image,\r\n            password: password,\r\n            email:email\r\n        });\r\n    },\r\n    getUser: () =>{\r\n        let userid = sessionStorage.getItem('userid');\r\n        let url = `${baseurl}/user/userInfo/${userid}`;\r\n        return axios.get(url);\r\n    }\r\n}\r\n\r\nexport default userAccount;","import React from 'react';\r\nimport AccountNavigation from './accountnavigation';\r\nimport userAccount from './userAccount';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            validationError: '',\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    setUsername(username) {\r\n        let newState = this.getCopyOfState();\r\n        newState.username = username;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setEmail(email) {\r\n        let newState = this.getCopyOfState();\r\n        newState.email = email;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPassword(password) {\r\n        let newState = this.getCopyOfState();\r\n        newState.password = password;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            validationError: this.state.validationError\r\n        }\r\n    }\r\n\r\n    setConfirmPassword(password) {\r\n        let newState = this.getCopyOfState();\r\n        newState.confirmPassword = password;\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let errors = this.validateInputs();\r\n        let newState = this.getCopyOfState();\r\n        \r\n        if (errors.length > 0) {\r\n            newState.validationError = errors[0];\r\n        } else {\r\n            try {\r\n                await userAccount.signup(this.state.username, this.state.email, this.state.password);\r\n                newState.redirect = true;\r\n            } catch (error) {\r\n                newState.validationError = `Somthing went terribly wrong!. It's not your fault. It's us. We're working to resolve it now`;\r\n            }\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    validateInputs() {\r\n        let errors = [];\r\n\r\n        if (this.state.confirmPassword !== this.state.password)\r\n            errors.push(\"Passwords do not match\");\r\n\r\n        //add other validations like email validation\r\n\r\n        return errors;\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        return this.state.redirect ? <Redirect to=\"/login\"/> : (\r\n            <div className=\"container-fliud h-100 hero-image hero-image2\">\r\n                <AccountNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-4 col-xs-0\"></div>\r\n                    <div className=\"col-md-4 col-xs-12 d-flex justify-content-center\">\r\n                        <div className=\"card h-75 w-100 overflow-auto d-flex useraccount\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-white\">Create a new account</h5>\r\n                                <form id=\"signup-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Name</label>\r\n                                        <input type=\"text\" id=\"fullname\" className=\"form-control\" value={this.state.name} onChange={(e) => this.setUsername(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Email</label>\r\n                                        <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.email} onChange={(e) => this.setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Password</label>\r\n                                        <input type=\"password\" id=\"password\" className=\"form-control\" value={this.state.password} onChange={(e) => this.setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Confirm Password</label>\r\n                                        <input type=\"password\" id=\"confirmpassword\" className=\"form-control\" value={this.state.confirmPassword} onChange={(e) => this.setConfirmPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-secondary mt-4 mx-auto w-100\" onClick={(event) => this.handleSubmit(event)}>Sign up</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.validationError}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-0\"></div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport AccountNavigation from './accountnavigation';\r\nimport userAccount from './userAccount';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errorMessage: '',\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    setEmail(email) {\r\n        let newState = this.getCopyOfState();\r\n        newState.email = email;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPassword(password) {\r\n        let newState = this.getCopyOfState();\r\n        newState.password = password;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            errorMessage: this.state.errorMessage,\r\n            redirect: this.state.redirect\r\n        }\r\n    }\r\n\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n\r\n        try {\r\n            let response = await userAccount.login(this.state.email, this.state.password);\r\n            sessionStorage.setItem('userid', response.data.userid);\r\n            newState.redirect = true;\r\n        } catch (error) {\r\n            newState.errorMessage = `Somthing went terribly wrong!. It's not your fault. It's us. We're working to resolve it now`;\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to=\"/user/gardens\"/> : (\r\n            <div className=\"container-fliud h-100 hero-image hero-image2\">\r\n                <AccountNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-4 col-xs-0\"></div>\r\n                    <div className=\"col-md-4 col-xs-12 d-flex justify-content-center\">\r\n                        <div className=\"card logincontainer w-100 overflow-auto d-flex useraccount\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-white\">Log In</h5>\r\n                                <form id=\"signup-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Email</label>\r\n                                        <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.email} onChange={(e) => this.setEmail(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"text-white\">Password</label>\r\n                                        <input type=\"password\" id=\"password\" className=\"form-control\" value={this.state.password} onChange={(e) => this.setPassword(e.target.value)} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-secondary mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>Log in</button>\r\n                                </form>\r\n                                <div className=\"error my-4 mx-auto\">\r\n                                    <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xs-0\"></div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nfunction MainNavigation(props) {\r\n    return (\r\n        <header className=\"row\">\r\n            <div className=\"col-md-12 p-0\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark mainnav shadow-sm\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Garden Book | </a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/\">Home<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/garden/plots\">Gardens<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/garden/new\">New Garden<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/garden/plot/add\">Add Plot<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"/garden/plots\">My Plots<span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"nav-item active align-self-end\">\r\n                                <a className=\"nav-link text-white\"  href=\"/api/profile/add\">Profile<span className=\"sr-only\">(current)</span></a>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default MainNavigation;","import axios from 'axios';\r\nconst baseurl = 'https://garden-helper.herokuapp.com';\r\n\r\nconst gardenActions = {\r\n    createNewGarden: (gardenName) => {\r\n\r\n        let url = `${baseurl}/api/garden/add`;\r\n\r\n        return axios.post(url, {\r\n            name: gardenName,\r\n            userid: sessionStorage.getItem('userid')\r\n        });\r\n    },\r\n\r\n    createNewPlot: (plotInfo) => {\r\n        let url = `${baseurl}/api/plot/add`;\r\n        plotInfo.userid = sessionStorage.getItem('userid');\r\n        plotInfo.gardenid = sessionStorage.getItem('gardenid');\r\n\r\n        return axios.post(url, plotInfo);\r\n    },\r\n\r\n    getGarden: () => {\r\n        let gardenid = sessionStorage.getItem('gardenid');\r\n        if (gardenid) {\r\n            let url = `${baseurl}/api/garden/${gardenid}`;\r\n            return axios.get(url);\r\n        }\r\n    },\r\n\r\n    getUserGardens: () => {\r\n        let userid = sessionStorage.getItem('userid');\r\n        if (userid) {\r\n            let url = `${baseurl}/api/user/gardens/${userid}`;\r\n            return axios.get(url);\r\n        }\r\n    },\r\n\r\n    recordWatering: (plotid, date, quantity, note) => {\r\n        let url = `${baseurl}/api/watering/add`;\r\n\r\n        return axios.post(url, {\r\n            date: date,\r\n            quantity: quantity,\r\n            note: note,\r\n            plotid: plotid,\r\n            gardenid: sessionStorage.getItem('gardenid')\r\n        });\r\n    },\r\n\r\n    recordFertilization: (plotid, date, name, note) => {\r\n        let url = `${baseurl}/api/fertilizer/add`;\r\n\r\n        return axios.post(url, {\r\n            date: date,\r\n            name: name,\r\n            note: note,\r\n            plotid: plotid,\r\n            gardenid: sessionStorage.getItem('gardenid')\r\n        });\r\n    },\r\n\r\n    searchForPlant: (plantSearchTerm) => {\r\n        let url = `${baseurl}/api/garden/plant/search/${plantSearchTerm}`;\r\n        return axios.get(url);\r\n    },\r\n\r\n    addProfil: (name,location,image) => {\r\n        let url = `${baseurl}/api/profile/add`;\r\n\r\n        return axios.post(url,{\r\n            name:name,\r\n            location:location,\r\n            image:image,\r\n            gardenid: sessionStorage.getItem('gardenid')\r\n        })\r\n    }\r\n}\r\n\r\nexport default gardenActions;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass NewGarden extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gardenName: '',\r\n            errorMessage: '',\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    setGardenName(gardenName) {\r\n        let newState = this.getCopyOfState();\r\n        newState.gardenName = gardenName;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            gardenName: this.state.gardenName,\r\n            redirect: this.state.redirect\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let newState = this.getCopyOfState();\r\n        try {\r\n            let response = await gardenAction.createNewGarden(this.state.gardenName);\r\n            switch (response.status) {\r\n                case 200:\r\n                    sessionStorage.setItem('gardenid', response.data.gardenid);\r\n                    newState.redirect = true;\r\n                    break;\r\n                case 500:\r\n                    newState.errorMessage = `Unable to save garden`;\r\n                    break;\r\n                default:\r\n                    console.error(\"Unexpected response status came in. Check out what's going on.\");\r\n            }\r\n        } catch (error) {\r\n            newState.errorMessage = `Somthing went terribly wrong!. It's not your fault. It's us. We're working to resolve it now`;\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to=\"/garden/plot/add\" /> : (\r\n            <div className=\"container-fliud h-100 mainpagesbackground overflow-auto\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-50 mx-auto mt-5\">\r\n                                <h3 className=\"card-title\">Start a new Garden</h3>\r\n                                <form id=\"signup-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"\">Garden name</label>\r\n                                        <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.gardenName} onChange={(e) => this.setGardenName(e.target.value)} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>Create</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewGarden;","import React from 'react';\r\nimport gardenAction from './gardenactions';\r\n\r\nclass PlantSearchResults extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plants: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.plantsearch.isSearchRequested) {\r\n            let response = await gardenAction.searchForPlant(this.props.plantsearch.searchterm);\r\n            if (response) {\r\n                let newState = this.getCopyOfState();\r\n                newState.plants = response.data;\r\n                this.setState(newState);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            garden: this.state.garden,\r\n            plots: this.state.plots\r\n        }\r\n    }\r\n\r\n    isEmpty() {\r\n        return !this.props.plantsearch.isSearchRequested;\r\n    }\r\n\r\n    handlePlantItemSelected(event, selectedPlant){\r\n        event.preventDefault();\r\n        this.props.plantsearch.plantSelected(selectedPlant);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"border border-secondary rounded-bottom searchresult\">\r\n                {this.state.plants.map((plant, index) => {\r\n                    return (<a key={index} href='/' className=\"dropdown-item\" onClick={(e) => this.handlePlantItemSelected(e, plant)}>{plant.plantName}</a>)\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PlantSearchResults;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport PlantSearchResults from './searchresults';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass NewPlot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            garden: '',\r\n            plotName: '',\r\n            length: '',\r\n            width: '',\r\n            sizeunits: '',\r\n            quantity: '',\r\n            plant: '',\r\n            errorMessage: '',\r\n            redirect:false,\r\n            plantsearch: {\r\n                isSearchRequested: false,\r\n                searchterm: '',\r\n                plantSelected: (p) => this.handlePlantSearchSelected(p)\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePlantSearchSelected(plant) {\r\n        let newState = this.getCopyOfState();\r\n        newState.plantsearch.isSearchRequested = false;\r\n        newState.plantsearch.searchterm = plant.plantName;\r\n        newState.plant = plant;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPlotName(plotName) {\r\n        let newState = this.getCopyOfState();\r\n        newState.plotName = plotName;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setlength(length) {\r\n        let newState = this.getCopyOfState();\r\n        newState.length = length;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setWidth(width) {\r\n        let newState = this.getCopyOfState();\r\n        newState.width = width;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPlantSearchName(plantName) {\r\n        let newState = this.getCopyOfState();\r\n        newState.plantsearch.searchterm = plantName;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setQuantity(quantity) {\r\n        let newState = this.getCopyOfState();\r\n        newState.quantity = quantity;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleChange(sizeunits) {\r\n        let newState = this.getCopyOfState();\r\n        newState.sizeunits = sizeunits;\r\n        this.setState(newState);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await gardenAction.getGarden();\r\n        if (response) {\r\n            let garden = response.data;\r\n            let newState = this.getCopyOfState();\r\n            newState.garden = garden.name;\r\n\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            garden: this.state.garden,\r\n            plotName: this.state.plotName,\r\n            plantName: this.state.plantName,\r\n            quantity: this.state.quantity,\r\n            length: this.state.length,\r\n            width: this.state.width,\r\n            sizeunits: this.state.sizeunits,\r\n            plantsearch: this.state.plantsearch,\r\n            plant: this.state.plant,\r\n            redirect:this.state.redirect\r\n        }\r\n    }\r\n\r\n    handleSearchClicked(event) {\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n        newState.plantsearch.isSearchRequested = true;\r\n        this.setState(newState);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let newState = this.getCopyOfState();\r\n        try {\r\n            this.state.plant.quantity = this.state.quantity;\r\n\r\n            let plotInfo = {\r\n                plotName: this.state.plotName,\r\n                plant: this.state.plant,\r\n                length: this.state.length,\r\n                width: this.state.width,\r\n                sizeunits: this.state.sizeunits\r\n            }\r\n            let response = await gardenAction.createNewPlot(plotInfo);\r\n            switch (response.status) {\r\n                case 200:\r\n                    newState.redirect = true;\r\n                    break;\r\n                case 500:\r\n                    newState.errorMessage = `Unable to save plot`;\r\n                    break;\r\n                default:\r\n                    console.error(\"Unexpected response status came in. Check out what's going on.\");\r\n            }\r\n        } catch (error) {\r\n            let newState = this.getCopyOfState();\r\n            newState.errorMessage = `Somthing went terribly wrong!. It's not your fault. It's us. We're working to resolve it now`;\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to=\"/garden/plots\" /> : (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-50 mx-auto mt-5\">\r\n                                <h3 className=\"card-title\">Add a new plot to {this.state.garden} Garden</h3>\r\n                                <form id=\"signup-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"\">What shall we call this plot?</label>\r\n                                        <input type=\"text\" id=\"plotname\" className=\"form-control\" value={this.state.plotName} onChange={(e) => this.setPlotName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group justify-content-center\">\r\n                                        <label className=\"\">How large is your plot? </label>\r\n                                        <div className=\"form-check-inline mx-2\">\r\n                                            <input type=\"text\" id=\"plotLength\" name=\"plotLength\" maxLength=\"5\" size=\"3\" value={this.state.length} onChange={(e) => this.setlength(e.target.value)} />\r\n\r\n                                            <span className=\"mx-2\">X</span>\r\n\r\n                                            <input type=\"text\" id=\"plotWidth\" name=\"plotWidth\" maxLength=\"5\" size=\"3\" value={this.state.width} onChange={(e) => this.setWidth(e.target.value)} />\r\n\r\n                                            <div className=\"input-group mx-2\">\r\n                                                <select className=\"custom-select\" id=\"areaUnits\" onChange={(e) => this.handleChange(e.target.value)}>\r\n                                                    <option value=\"DEFAULT\">Units</option>\r\n                                                    <option value=\"ft\">Feet</option>\r\n                                                    <option value=\"yd\">Yards</option>\r\n                                                    <option value=\"m\">Metres</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"\">What do you want to plant?</label>\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" id=\"inlineFormInputGroup\" placeholder=\"Find plant\" value={this.state.plantsearch.searchterm} onChange={(e) => this.setPlantSearchName(e.target.value)} />\r\n                                            <div className=\"input-group-append\">\r\n                                                <button className=\"btn btn-secondary input-group-button\" onClick={(e) => this.handleSearchClicked(e)}>search</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        {this.state.plantsearch.isSearchRequested ? <PlantSearchResults plantsearch={this.state.plantsearch} /> : <span />}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"\">How many do you want to plant?</label>\r\n                                        <input type=\"text\" id=\"plotname\" className=\"form-control\" value={this.state.quantity} onChange={(e) => this.setQuantity(e.target.value)} />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>Create</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPlot;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass PlotEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    redirectTo(path){\r\n        this.setState({\r\n            redirect:true,\r\n            redirectpath:path\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to={this.state.redirectpath} /> : (\r\n            <tr>\r\n                <td className=\"align-middle\">{this.props.plot.number}</td>\r\n                <td className=\"align-middle\"><img className=\"img-thumbnail plantimage\" src={this.props.plot.plantImageUrl} /></td>\r\n                <td className=\"align-middle\">{this.props.plot.plant}</td>\r\n                <td className=\"align-middle\">{this.props.plot.plotName}</td>\r\n                <td className=\"align-middle\">{this.props.plot.dimension}</td>\r\n                <td className=\"align-middle\">\r\n                    <div className='d-flex flex-row justify-content-center'>\r\n                        <button className='btn btn-primary mr-1 my-1 btn-sm' onClick={() => this.redirectTo(wateringpath(this.props.plot.plotid))}>Water</button>\r\n                        <button className='btn btn-dark mr-1 my-1 btn-sm' onClick={() => this.redirectTo(fertilizerpath(this.props.plot.plotid))}>Fertilize</button>\r\n                        <button className='btn btn-info mr-1 my-1 btn-sm' onClick={() => this.redirectTo(activitiespath(this.props.plot.plotid))}>Activities</button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nfunction wateringpath(plotId) {\r\n    return`/garden/plot/watering/${plotId}`;\r\n}\r\n\r\nfunction fertilizerpath(plotId) {\r\n    return `/garden/plot/fertilizer/${plotId}`;\r\n}\r\n\r\nfunction activitiespath(plotId) {\r\n    return `/garden/plot/activities/${plotId}`;\r\n}\r\n\r\nexport default PlotEntry;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport PlotEntry from './plotentry';\r\n\r\nclass Plot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            garden: '',\r\n            plots: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await gardenAction.getGarden();\r\n        if (response) {\r\n            let garden = response.data;\r\n\r\n            let plots = garden.plots;\r\n\r\n            let newState = this.getCopyOfState();\r\n            newState.garden = garden.name;\r\n            newState.plots = [];\r\n\r\n            for (let i = 0; i < plots.length; i++) {\r\n                let plot = plots[i];\r\n                newState.plots.push({\r\n                    number: i + 1,\r\n                    plotName: plot.name,\r\n                    dimension: `${plot.length} X ${plot.width} ${plot.units}`,\r\n                    plant: plot.plant.plantName,\r\n                    plantImageUrl: plot.plant.imageUrl,\r\n                    plotid: plot._id\r\n                });\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            garden: this.state.garden,\r\n            plots: this.state.plots\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-1 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body mx-auto mt-1 plotstablecontainer\">\r\n                                <h3 className=\"card-title\">Plots in {this.state.garden} Garden</h3>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\" colSpan='2'>Plant</th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\">Dimension</th>\r\n                                            <th scope=\"col\" className=\"px-auto\">What do you want to do?</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.plots.map((plot, index) => {\r\n                                            return <PlotEntry key={index} index={index} plot={plot} />\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Plot;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport Moment from 'react-moment';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Watering extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            quantity: '',\r\n            note: '',\r\n            redirect: false\r\n        }\r\n        if (props.match.params.plotid)\r\n            this.state.plotid = props.match.params.plotid\r\n    }\r\n\r\n    setQuantity(quantity) {\r\n        let newState = this.getCopyOfState();\r\n        newState.quantity = quantity;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setNote(note) {\r\n        let newState = this.getCopyOfState();\r\n        newState.note = note;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            date: this.state.date,\r\n            quantity: this.state.quantity,\r\n            note: this.state.note,\r\n            plotid: this.state.plotid,\r\n            redirect: this.state.redirect\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await gardenAction.recordWatering(this.state.plotid, this.state.date, this.state.quantity, this.state.note);\r\n        let newState = this.getCopyOfState();\r\n        newState.redirect = true;\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to=\"/garden/plots\" /> : (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-75 mx-auto mt-5\">\r\n                                <h3 className=\"card-title\">Watering Information</h3>\r\n                                <form id=\"form\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Recording watering for</label> <Moment date={this.state.date} format=\"MM/DD/YYYY hh:mm A\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Quantity</label>\r\n                                            <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.quantity} onChange={(e) => this.setQuantity(e.target.value)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Notes</label>\r\n                                            <textarea className=\"form-control\" id=\"messages\" rows=\"3\" value={this.state.note} onChange={(e) => this.setNote(e.target.value)}></textarea>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>save</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                {/* <span className=\"text-danger\">{this.state.errorMessage}</span> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Watering;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport Moment from 'react-moment';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Fertilizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date(),\r\n            name: '',\r\n            note: '',\r\n            redirect: false\r\n        }\r\n        if (props.match.params.plotid)\r\n            this.state.plotid = props.match.params.plotid\r\n    }\r\n\r\n    setName(name) {\r\n        let newState = this.getCopyOfState();\r\n        newState.name = name;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setNote(note) {\r\n        let newState = this.getCopyOfState();\r\n        newState.note = note;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            date: this.state.date,\r\n            name: this.state.name,\r\n            note: this.state.note,\r\n            plotid: this.state.plotid,\r\n            redirect: this.state.redirect\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await gardenAction.recordFertilization(this.state.plotid, this.state.date, this.state.name, this.state.note);\r\n        let newState = this.getCopyOfState();\r\n        newState.redirect = true;\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to=\"/garden/plots\" /> :  (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-75 mx-auto mt-5\">\r\n                                <h3 className=\"card-title\">Fertilizer Information</h3>\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Recording fertilization for</label> <Moment date={this.state.date} format=\"MM/DD/YYYY hh:mm A\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input type=\"text\" id=\"name\" className=\"form-control\" value={this.state.Name} onChange={(e) => this.setName(e.target.value)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Notes</label>\r\n                                        <textarea className=\"form-control\" id=\"messages\" rows=\"3\" value={this.state.note} onChange={(e) => this.setNote(e.target.value)}></textarea>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(e) => this.handleSubmit(e)}>save</button>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                {/* <span className=\"text-danger\">{this.state.errorMessage}</span> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fertilizer;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass GardenEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    tillGarden() {\r\n        sessionStorage.setItem('gardenid', this.props.garden.gardenid);\r\n        this.setState({ redirect: true });\r\n    }\r\n\r\n    render() {\r\n\r\n        return this.state.redirect ? <Redirect to=\"/garden/plots\" /> : (\r\n            <tr>\r\n                <td>{this.props.garden.number}</td>\r\n                <td>{this.props.garden.gardenName}</td>\r\n                <td>{this.props.garden.plotsCount}</td>\r\n                <td>\r\n                    <div className='d-flex flex-row justify-content-around'>\r\n                        <button className='btn btn-dark mx-1 my-1 py-0 px-1' onClick={() => this.tillGarden()}>Cultivate</button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GardenEntry;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport GardenEntry from './gardenentry';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Plot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gardens: [],\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await gardenAction.getUserGardens();\r\n        let newState = this.getCopyOfState();\r\n        if (response) {\r\n            let gardens = response.data;\r\n            if (gardens.length > 0) {\r\n                newState.gardens = [];\r\n\r\n                for (let i = 0; i < gardens.length; i++) {\r\n                    let garden = gardens[i];\r\n                    newState.gardens.push({\r\n                        number: i + 1,\r\n                        gardenName: garden.name,\r\n                        plotsCount: garden.plots.length,\r\n                        gardenid: garden._id\r\n                    });\r\n                }\r\n            } else {\r\n                newState.redirect = true;\r\n            }\r\n        }\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            gardens: [],\r\n            redirect: this.state.redirect\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to=\"/garden/prompt\" /> : (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body mx-auto mt-5 plotstablecontainer\">\r\n                                <h3 className=\"card-title\">Your Gardens</h3>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">Name</th>\r\n                                            <th scope=\"col\" colSpan='2'>Plots</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.state.gardens.map((garden, index) => {\r\n                                            return <GardenEntry key={index} index={index} garden={garden} />\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Plot;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MainNavigation from './mainnavigation';\r\n\r\nclass StartGardenPrompt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to=\"/garden/new\" /> : (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-50 mt-5\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-50 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body mx-auto mt-5 d-flex flex-column plotstablecontainer\">\r\n                                <h3 className=\"card-title\">You have no Gardens. Want to start one?</h3>\r\n                                <button className='btn btn-dark mt-4 mx-auto garden-prompt-button' onClick={() => this.setState({redirect : true})}>Start</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartGardenPrompt;","import React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nfunction WateringEntry(props) {\r\n    return (\r\n        <tr>\r\n            <td>{props.activity.number}</td>\r\n            <td><Moment date={props.activity.date} format=\"MM/DD/YYYY hh:mm A\" /></td>\r\n            <td>{props.activity.quantity}</td>\r\n            <td>{props.activity.notes}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default WateringEntry;","import React from 'react';\r\nimport WateringEntry from './wateringentry';\r\n\r\nfunction WateringActivities(props) {\r\n    let activities = [];\r\n    if (props.plot) {\r\n        for (let i = 0; i < props.plot.watering.length; i++) {\r\n            let watering = props.plot.watering[i];\r\n            activities.push({\r\n                number: i + 1,\r\n                date: watering.date,\r\n                quantity: watering.quantity,\r\n                notes: watering.note,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex flex-column'>\r\n            <h5>Your waterings in {props.plot ? props.plot.name : ''}</h5>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Quantity</th>\r\n                        <th scope=\"col\">Notes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {activities.map((activity, index) => {\r\n                        return <WateringEntry key={index} index={index} activity={activity} />\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WateringActivities;","import React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nfunction FertilizationEntry(props) {\r\n    return (\r\n        <tr>\r\n            <td><Moment date={props.activity.date} format=\"MM/DD/YYYY hh:mm A\" /></td>\r\n            <td>{props.activity.name}</td>\r\n            <td>{props.activity.notes}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default FertilizationEntry;","import React from 'react';\r\nimport FertilizationEntry from './fertilizerentry';\r\n\r\nfunction FertilizationActivities(props) {\r\n    let activities = [];\r\n    if (props.plot) {\r\n        for (let i = 0; i < props.plot.fertilizer.length; i++) {\r\n            let watering = props.plot.fertilizer[i];\r\n            activities.push({\r\n                number: i + 1,\r\n                date: watering.date,\r\n                quantity: watering.quantity,\r\n                notes: watering.note,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex flex-column'>\r\n             <h5>Your Fertilizations in {props.plot ? props.plot.name : ''}</h5>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Notes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {activities.map((activity, index) => {\r\n                        return <FertilizationEntry key={index} index={index} activity={activity} />\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FertilizationActivities;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport gardenAction from './gardenactions';\r\nimport WateringActivities from './wateringactivities';\r\nimport FertilizationActivities from './fertilizeractivities';\r\n\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plot: null,\r\n            selectedActivity: 'Watering'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await gardenAction.getGarden();\r\n        if (response) {\r\n            let garden = response.data;\r\n\r\n            let plot = garden.plots.find(plot => plot._id === this.props.match.params.plotid);\r\n            if (plot) {\r\n                let newState = this.getCopyOfState();\r\n                newState.plot = plot;\r\n                this.setState(newState);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            garden: this.state.garden,\r\n            plots: this.state.plots\r\n        }\r\n    }\r\n\r\n    updateSelectedActivity(e) {\r\n        let newState = this.getCopyOfState();\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleActivityTypeSelected(selectedActivity) {\r\n        let newState = this.getCopyOfState();\r\n        newState.selectedActivity = selectedActivity;\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-1 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body mx-auto d-flex flex-column plotstablecontainer\">\r\n                                <h3 className=\"card-title\">Your activities in {this.state.plot? this.state.plot.name : ''} Plot</h3>\r\n                                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\" onClick={(e) => this.updateSelectedActivity(e)}>\r\n                                    <label className=\"btn btn-primary active\">\r\n                                        <input type=\"radio\" name=\"options\" value=\"Watering\" checked={this.state.selectedActivity === 'Watering'} onChange={(e) => this.handleActivityTypeSelected(e.target.value)} /> Waterings\r\n                                 </label>\r\n                                    <label className=\"btn btn-dark\">\r\n                                        <input type=\"radio\" name=\"options\" value=\"Fertilizations\" checked={this.state.selectedActivity === 'Fertilizations'} onChange={(e) => this.handleActivityTypeSelected(e.target.value)} /> Fertilizations\r\n                                 </label>\r\n                                </div>\r\n                                <div className=\"mt-5\">\r\n                                    {(this.state.selectedActivity === 'Watering' ?\r\n                                        <WateringActivities plot={this.state.plot} /> : <FertilizationActivities plot={this.state.plot} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport MainNavigation from './mainnavigation';\r\nimport userAccount from './userAccount';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: null,\r\n            placeholderimage: 'https://via.placeholder.com/100',\r\n            password: null,\r\n            placeholderpassword: '*****************',\r\n            isPasswordDisabled: true,\r\n            isNameDisabled: true,\r\n            isEmailDisabled: true,\r\n            name: \"\",\r\n            email:\"\"\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let response = await userAccount.getUser();\r\n        if (response) {\r\n            let user = response.data;\r\n            if (user) {\r\n                let newState = this.getCopyOfState();\r\n                if (user.image)\r\n                    newState.image = user.image;\r\n                newState.name = user.name;\r\n                this.setState(newState);\r\n            }\r\n        }\r\n    }\r\n\r\n    setImage(image) {\r\n        let newState = this.getCopyOfState();\r\n        newState.image = image;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setPassword(password) {\r\n        let newState = this.getCopyOfState();\r\n        newState.password = password;\r\n        this.setState(newState);\r\n    }\r\n\r\n    setName(name) {\r\n        let newState = this.getCopyOfState();\r\n        newState.name = name;\r\n        this.setState(newState);\r\n    }\r\n    \r\n    setEmail(email) {\r\n        let newState = this.getCopyOfState();\r\n        newState.email = email;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState() {\r\n        return {\r\n            image: this.state.image,\r\n            placeholderimage : this.state.placeholderimage,\r\n            name: this.state.name,\r\n             email: this.state.email,\r\n            password: this.state.password,\r\n            isPasswordDisabled: this.state.isPasswordDisabled,\r\n            isNameDisabled: this.state.isNameDisabled,\r\n            placeholderpassword : this.state.placeholderpassword\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        await userAccount.updateUser(this.state.name, this.state.image,this.state.password);\r\n        let newState = this.getCopyOfState();\r\n        newState.isPasswordDisabled = true;\r\n        newState.placeholderpassword = '*************************';\r\n        newState.password = null;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handlePasswordEditClicked(event) {\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n        newState.isPasswordDisabled = false;\r\n        newState.placeholderpassword = null;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleNameEditClicked(event) {\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n        newState.isNameDisabled = false;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleEmailEditClicked(event){\r\n        event.preventDefault();\r\n        let newState = this.getCopyOfState();\r\n        newState.isEmailDisabled = false;\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleImageSelected(image) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", () => {\r\n            let newState = this.getCopyOfState();\r\n            newState.image = reader.result;\r\n            this.setState(newState);\r\n        }, false);\r\n\r\n        if (image) {\r\n            reader.readAsDataURL(image);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <MainNavigation />\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 d-flex justify-content-center\">\r\n                        <div className=\"card w-75 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-75 mx-auto mt-5\">\r\n                                <div className=\"d-flex\">\r\n                                    <img src={this.state.image || this.state.placeholderimage} alt=\"profile photo\" className=\"img-thumbnail mx-3 rounded-circle profileimage\" />\r\n                                    <div className=\"w-100\">\r\n                                        <h3 className=\"card-title\">Your Profile</h3>\r\n                                        <form>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"custom-file\">\r\n                                                    <input type=\"file\" className=\"custom-file-input\" onChange={(e) => this.handleImageSelected(e.target.files[0])} id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" />\r\n                                                    <label className=\"custom-file-label\" >upload picture</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"input-group\">\r\n                                                <input type=\"password\" className=\"form-control\" disabled={this.state.isPasswordDisabled} id=\"inlineFormInputGroup\" value={this.state.password || this.state.placeholderpassword } onChange={(e) => this.setPassword(e.target.value)} />\r\n                                                <div className=\"input-group-append\">\r\n                                                    <button className=\"btn btn-secondary input-group-button\" onClick={(e) => this.handlePasswordEditClicked(e)}>edit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-dark\">Name</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" disabled={this.state.isNameDisabled} id=\"inlineFormInputGroup\" value={this.state.name} onChange={(e) => this.setName(e.target.value)} />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-secondary input-group-button\" onClick={(e) => this.handleNameEditClicked(e)}>edit</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> \r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-dark\">email</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" disabled={this.state.isEmailDisabled} id=\"inlineFormInputGroup\" value={this.state.email} onChange={(e) => this.setEmail(e.target.value)} />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-secondary input-group-button\" onClick={(e) => this.handleEmailEditClicked(e)}>edit</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <button type=\"submit\" className=\"btn btn-dark mt-4 mx-auto w-100\" onClick={(event) => this.handleSubmit(event)}>save</button>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"error my-4 mx-auto\">\r\n                                <span className=\"text-danger\">{this.state.errorMessage}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { MailSlurp } from \"mailslurp-client\";\r\nimport { Redirect } from 'react-router-dom';\r\nconst mailslurp = new MailSlurp({ apiKey: \"af09981b8affd4ed72c06191454258b498d6f3196de5bdf9fc25f57e5acd5cb3\" });\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            message: '',\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n\r\n    onNameChange(event) {\r\n        let newState = this.getCopyOfState();\r\n        newState.name = event.target.value;\r\n        this.setState(newState);\r\n    }\r\n\r\n    onEmailChange(event) {\r\n        let newState = this.getCopyOfState();\r\n        newState.email = event.target.value;\r\n        this.setState(newState);\r\n    }\r\n\r\n    onMessageChange(event) {\r\n        let newState = this.getCopyOfState();\r\n        newState.message = event.target.value;\r\n        this.setState(newState);\r\n    }\r\n\r\n    getCopyOfState(){\r\n        return {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            message: this.state.message,\r\n            redirect: this.state.redirect\r\n        }\r\n    }\r\n    resetForm() {\r\n\r\n        this.setState({ name: '', email: '', message: '', redirect: true })\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let inbox = await mailslurp.getInbox('6ecd2217-2e07-4a27-8dd7-92ef3af2a991');\r\n        const options = {\r\n            to: ['melanieduah@yahoo.com'],\r\n            subject: 'Hey i need you help',\r\n            body: `Message from: ${this.state.name}.\r\n                      \r\n                  ${this.state.message}\r\n\r\n                My email is: ${this.state.email}`\r\n        }\r\n        await mailslurp.sendEmail(inbox.id, options);\r\n        alert('message received');\r\n        this.resetForm();\r\n    }\r\n\r\n    render() {\r\n        return this.state.redirect ? <Redirect to=\"/\"/> : (\r\n            <div className=\"container-fluid h-100 mainpagesbackground\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-12 mt-5 d-flex justify-content-center\">\r\n                        <div className=\"card w-50 mt-2 mb-5 my-2 pt-5 overflow-auto d-flex maincardcontainer\">\r\n                            <div className=\"card-body w-50 mx-auto mt-5\">\r\n                                <h5 className=\"card-title\">Any Problem Contact Us</h5>\r\n                                <form id=\"contact-form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Name</label>\r\n                                            <input type=\"text\" id=\"fullname\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email</label>\r\n                                            <input type=\"text\" id=\"email\" className=\"form-control\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Messages</label>\r\n                                            <textarea className=\"form-control\" id=\"messages\" rows=\"3\" value={this.state.message} onChange={this.onMessageChange.bind(this)}></textarea>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './index.css';\r\nimport Signup from './components/signup';\r\nimport Login from './components/login';\r\nimport NewGarden from './components/newgarden';\r\nimport NewPlot from './components/newplot';\r\nimport Plots from './components/plots';\r\nimport Watering from './components/watering';\r\nimport Fertilizer from './components/fertilizer';\r\nimport Gardens from './components/gardens';\r\nimport StartGardenPrompt from './components/startgardenprompt';\r\nimport Activities from './components/plotactivities';\r\nimport Profile from './components/profile';\r\nimport Contact from './components/contact';\r\n\r\n\r\nexport default function App() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={Signup} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/user/gardens' component={Gardens} />\r\n            <Route exact path='/garden/new' component={NewGarden} />\r\n            <Route exact path='/garden/prompt' component={StartGardenPrompt} />\r\n            <Route exact path='/garden/plot/add' component={NewPlot} />\r\n            <Route exact path='/garden/plots' component={Plots} />\r\n            <Route exact path='/garden/plot/watering/:plotid' component={Watering} />\r\n            <Route exact path='/garden/plot/fertilizer/:plotid' component={Fertilizer} />\r\n            <Route exact path='/garden/plot/activities/:plotid' component={Activities} />\r\n            <Route exact path='/api/profile/add' component={Profile} />\r\n            <Route exact path='/contact' component={Contact} />\r\n        </Switch>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/Project-3-Frontend\">\r\n        <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}